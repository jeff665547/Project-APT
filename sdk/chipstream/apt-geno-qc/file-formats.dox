/**
\page file-format-gqc File Format: Genotyping Quality Control (GQC) (\aptversion)

<center><b>DRAFT</b></center>

The GQC (Genotyping Quality Control) file format is used to represent per-chip
quality control data using one or more types of analyses on a given array type.

The format is a specialization of version 1 of the \link file-format-tsv TSV file format \endlink. 
The format is defined for genotyping array only.

The file contains quality assessment metrics and is generated by apt-geno-qc.
There is one row per CEL file analyzed.

\section gqc_specifications Specifications

- Required headers:
  - format_version: indicates the version of the output file format.
  - content_version: used to track the version of the content of the file.
  - default_analysis_name: The value for this field must correspond to
    an entry in the 'analysis_name' column within the file.  It is used
    to indicate to the application reading the Analysis-QCC file which
    one of the various ways of analyzing different probeset groups is
    to be treated as the primary metric for ranking and/or qualifying
    the performance of experiments.
  - library file: the library (CDF) file used in the analyses
- Optional headers
  - gender information: the explanation of gender mapping for gender 
    interpretation and parsing.
  - method-n: a comment line for analysis number n, one line per
    analysis.  These comment lines record all the information used for
    the analyses for tracking purposes.
- Columns
  - Per TSV format, order of columns is not guaranteed.
  - Per TSV format, additional columns may be present.  	
  - Column Chip (required): the first column is always named 'Chip' with chip cel
    files as values.
  - Gender (optional):
  - QC call rate (Nsp) (optional):
  - QC call rate (Nsp/Sty overlap) (optional):
  - QC call rate (Sty) (optional):
  - QC call rate (all) (optional):
  - other columns may be present (optional):

\section gqc_implementation Parsing and Writing

The official C++ parser used by affy can be found in APT under
sdk/file/TsvFile/TsvFile.h. When possible, parsing and
writing of GQC files should be done using this code.

\section gqc_notes Notes

Nothing at this time.

\section gqc_example1 Example 1 -- GQC file for 5 analysis run on Genome Wide SNP 5

\verbatim
#%format_version=1
#%content_version=1
#%default_analysis_name=QC call rate (all)
#%library file=data/GenomeWideEx_5/data/GenomeWideSNP_5.cdf
#gender information: male=0,female=1,unknown=-1
#method1:analysis_name=QC call rate (all);analysis=dm;group_name=all_qc;as.percentage=1;dm.cutoff=0.33;dm.hetMult=1.25;precision=4
#method2:analysis_name=QC call rate (Nsp);analysis=dm;group_name=nsp_qc;as.percentage=1;dm.cutoff=0.33;dm.hetMult=1.25;precision=4
#method3:analysis_name=QC call rate (Sty);analysis=dm;group_name=sty_qc;as.percentage=1;dm.cutoff=0.33;dm.hetMult=1.25;precision=4
#method4:analysis_name=QC call rate (Nsp/Sty overlap);analysis=dm;group_name=nsp_sty_qc;as.percentage=1;dm.cutoff=0.33;dm.hetMult=1.25;precision=4
#method5:analysis_name=Gender;analysis=gender;group_name=chrX;as.text=1;em.cutoff=0.5;em.thresh=0.05;gender.cutoff=0.1
Chip	Gender	QC call rate (Nsp)	QC call rate (Nsp/Sty overlap)	QC call rate (Sty)	QC call rate (all)
NA06985_GW5_C.CEL	female	91.13	94.45	84.86	91.63
NA06991_GW5_C.CEL	female	93.06	94.58	86.47	92.52
NA06993_GW5_C.CEL	male	92.16	94.09	84.54	91.63
\endverbatim

\section gqc_related Related Pages

- <a href="./file-format-tsv-notes.html">TsvFile Design Notes</a>
- <a href="./file-format-tsv.html">TSV File Format</a>
*/

/**
\page file-format-qca File Format: Quality Control Analysis (QCA) (\aptversion)

<center><b>DRAFT</b></center>

The Quality Control Analysis (QCA) file format is used to define types 
of quality assessment analysis to perform on an array.
The file can specify multiple analyses to run, and
specifies for each which probesets should be used and how they should be
analyzed.

The format is a specialization of version 1 of the \link file-format-tsv TSV file format \endlink. 
The format is defined for genotyping array only.

\section qca_specifications Specifications

- Required headers
  - format_version: indicates the version of the QCA format.
  - content_version: used to track the version of the content of the file.
  - default_analysis_name: The value for this field must correspond to
    an entry in the 'analysis_name' column within the file.  It is used
    to indicate to the application reading the Analysis-QCC file which
    one of the various ways of analyzing different probeset groups is
    to be treated as the primary metric for ranking and/or qualifying
    the performance of experiments.
- Optional headers: none
- Columns
  - per TSV format, order of columns is not guaranteed.
  - per TSV format, additional columns may be present.
  - analysis_name: This is the primary key for the rows and thus should take
    on an unique value for each row.  It is intended to provide a brief
    descriptive identifer which indicates the probeset group and analysis
    method being specified in the row.  This field may be used by some
    applications as a method identifier in subsequent processing.
  - group_name: This field identifies the group(s) of probesets to be
    analyzed and must it must also exist in the corresponding QCC file (see
    QCC file format spec).  The value is a string with one group name per
    analysis, different analyses may use the same group name (in other words
    it is possible to specify that the same probesets be anlayzed in
    multiple different ways).
  - analysis: This field specifies which algorithm is used for corresponding
    analysis.  The calling application must be able to recogize the name of
    the analysis and know how to translate it into the analysis method to be
    used.  Examples of some algorithms available are dm (DM) and gender
    (GENDER).  They must be either all lower case or all upper case. Valid a
    analysis algorithms must be specified, otherwise no analysis results can
    be generated.
  - options: This field specifies parameter(s) for the corresponding
    analysis algorithm.  Each parameter is a tag-value pair separated by
    an equal sign.  Multiple parameters can be specified by supplying
    tag-value pairs in a comma-separated list.  Parameters tag-value pairs
    are case-sensitive, unrecognized parameters will be ignored and treated
    as missing.  The order of parameters is unimportant.  Example parameters
    for some current algorithm options are:
    + dm
      - dm.cutoff: confidence threshold for making calls (default
        is 0.33)
      - dm.hetMult: het/hom tuning parameter added to log-likelihood of
        het calls (default is 1.25)
      - as.percantage: logic value of 0 or 1 to indicate whether a 
        percentage or a fraction is reported (default is 1)
      - precision: the precision of the stats to be reported (default is 6)
    + gender
      - em.thresh: threshold of em's confidence score for clustering,
        the smaller the more stringent (default value is 0.05).
      - em.cutoff: the cutoff on percentage of SNPs classified with an 
        em's confidence score less than em.thresh (default value is 0.5)
      - gender.cutoff: heterozygosity above which called gender will be
        female and below which called gender will be male.  (default
        value is 0.1)
      - as.text: logic value of 0 or 1 to indicate whether numeric value
        of -1,0,1 or text of "unknown","male","female" is reported (default is 1)

\section qca_implementation Parsing and Writing

The official C++ parser used by affy can be found in APT under
sdk/file/TsvFile/TsvFile.h. When possible, parsing and
writing of QCA files should be done using this code.

\section qca_notes Notes

Nothing at this time.

\section qca_example1 Example 1 -- GenomeWideSNP_5.qca

A QCA file for a the Genome Wide SNP 5 array.

\verbatim
#%format_version=1.0
#%content_version=1.0
#%default_analysis_name=QC call rate (all)
#
# There is a row for each analysis method on each SNP list.
#   analysis name is the name that will be associated with the analysis & snp list combination
#   snp_list is the identifier for the list of SNPs
#   analysis is the name of the algorithm to run
#   options is a field (may be empty) to pass options to the algorithm.
#
analysis_name	group_name	analysis	options
# Standard analyses
QC call rate (all)	all_qc	dm	dm.cutoff=0.33,dm.hetMult=1.25,as.percentage=1,precision=4
QC call rate (Nsp)	nsp_qc	dm	dm.cutoff=0.33,dm.hetMult=1.25,as.percentage=1,precision=4
QC call rate (Sty)	sty_qc	dm	dm.cutoff=0.33,dm.hetMult=1.25,as.percentage=1,precision=4
QC call rate (Nsp/Sty overlap)	nsp_sty_qc	dm	dm.cutoff=0.33,dm.hetMult=1.25,as.percentage=1,precision=4
Gender	chrX	gender	em.cutoff=0.5,em.thresh=0.05,gender.cutoff=0.1,as.text=1
\endverbatim

\section qca_related Related Pages

- <a href="./file-format-tsv-notes.html">TsvFile Design Notes</a>
- <a href="./file-format-tsv.html">TSV File Format</a>
*/


/**
\page file-format-qcc File Format: Quality Control Content (QCC) (\aptversion)

<center><b>DRAFT</b></center>

The Quality Control Content (QCC) file format is used to:
- define group membership for probesets on a chip (typically different quality assessment groups)
- enumerate what individual probeset values should be written to CHP file headers
- define textual labels for probesets

The format is a specialization of version 1 of the \link file-format-tsv TSV file format \endlink. 
The format is defined for genotyping and expression arrays.

\section qcc_specifications Specifications

- Required headers
  - format_version (genotyping only): indicates the version of the QCC format.
  - content_version (genotyping only): used to track the version of the content of
    the file.
  - primary_key (genotyping only): value must be set to the name of one of the columns
    present which can be used as a primary key mapping to the probeset.
- Optional headers
  - chip_type: indicates the chip type (as stored in the CEL file) which the ps file 
    is for. Multiple chip_type headers may be present indicating the ps file
    can be used with any one of the listed chip types.
  - lib_set_name: indicates the name of a collection of related library files for a given
    chip. For example, the PGF and CLF files intended to be used with this PS file should
    have the same lib_set_name. Only a single lib_set_name is allowed.
  - lib_set_version: indicates the version of a collection of related library files for 
    a given chip. For example, the PGF and CLF files intended to be used with this PS file should
    have the same lib_set_version. Only a single lib_set_version is allowed.
  - create_date: timestamp for when the file was created
  - guid: a unique identifier for the fileA
- Columns
  - per TSV format, order of columns is not guaranteed.
  - per TSV format, additional columns may be present.
  - Primary key (required): There must be a column which can be used as a primary
    key mapping to the probeset and with a name matching the value in
    the 'primary_key' header entry.  For genotyping probesets the
    'probeset_name' field has been used, for expression probesets
    the field probeset_id has been used.
  - group_name (required): This field identifies the group(s) of which the probeset
    is a member.  The value is a string with a space-separated list of
    group names.  The order of the group names within the string is not
    guaranteed.
  - probeset_name (required expression-only): defines the textual label for a probeset. 
    The column is required, but the value can be empty.
  - quantifiction_in_header (required expression-only): A boolean field taking on 
    value 1/0 according to whether or not the value for the probeset should
    be written into the header of output files generated by the
    appliction reading the QCC file. (ie in CHP headers)

\section qcc_implementation Parsing and Writing

The official C++ parser used by affy can be found in APT under
sdk/file/TsvFile/TsvFile.h. When possible, parsing and
writing of QCC files should be done using this code.

\section qcc_notes Notes

Nothing at this time.

\section qcc_example1 Example 1 -- Genotyping QCC file

A 10-line genotyping QCC file:

\verbatim
#%format_version=1.0
#%content_version=1.0
#%primary_key=probeset_name
group_name	probeset_name
all_qc nsp_qc	FQC-10000979
all_qc nsp_qc	FQC-10009702
all_qc sty_qc	FQC-10015773
all_qc sty_qc	FQC-10021569
all_qc nsp_sty_qc	FQC-10026879
all_qc sty_qc	FQC-10029725
\endverbatim

\section qcc_example2 Example 2 -- Expression QCC file

A 10-line Expression QCC file:

\verbatim
#%chip_type=HuEx-1_0-st-v2
#%chip_type=HuEx-1_0-st-v1
#%chip_type=HuEx-1_0-st-ta1
#%lib_set_name=HuEx-1_0-st
#%lib_set_version=r2
#%create_date=Tue Sep 19 15:18:05 PDT 2006
#%guid=0000008635-1158704285-1505397842-0460135878-0216697883
probeset_id	group_name	probeset_name	quantification_in_header
4081344	bac_spike	AFFX-BioB-3_at	1
4083032	bac_spike	AFFX-BioB-5_at	1
\endverbatim

\section qcc_related Related Pages

- <a href="./file-format-tsv-notes.html">TsvFile Design Notes</a>
- <a href="./file-format-tsv.html">TSV File Format</a>
*/

